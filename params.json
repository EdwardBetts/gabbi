{"name":"Gabbi","tagline":"Declarative HTTP Testing for Python","body":"## Gabbi\r\n\r\nGabbi is a tool for running HTTP tests where requests and responses\r\nare represented in a declarative form.\r\n\r\nIt is under active development. See the [YAML files](https://github.com/cdent/gabbi/tree/master/gabbi/gabbits_intercept)\r\nfor examples of working tests and [the docs](http://gabbi.readthedocs.org/)\r\nfor more details on features and formats.\r\n\r\n## Purpose\r\n\r\nGabbi works to bridge the gap between human readable YAML files that\r\nrepresent HTTP requests and expected responses and the obscured realm of\r\nPython-based, object-oriented unit tests in the style of the unittest\r\nmodule and its derivatives.\r\n\r\nEach YAML file represents an ordered list of HTTP requests along with\r\nthe expected responses. This allows a single file to represent a\r\nprocess in the API being tested. For example:\r\n\r\n* Create a resource.\r\n* Retrieve a resource.\r\n* Delete a resource.\r\n* Retrieve a resource again to confirm it is gone.\r\n\r\nAt the same time it is still possible to ask gabbi to run just one\r\nrequest. If it is in a sequence of tests, those tests prior to it in\r\nthe YAML file will be run (in order). In any single process any test\r\nwill only be run once. Concurrency is handled such that one file\r\nruns in one process.\r\n\r\nThese features mean that it is possible to create tests that are\r\nuseful for both humans (as tools for improving and developing APIs)\r\nand automated CI systems.\r\n\r\n## Install\r\n\r\nGabbi can be installed from [PyPI](https://pypi.python.org/pypi/gabbi)\r\nusing [pip](https://pypi.python.org/pypi/pip):\r\n\r\n```\r\n$ pip install -U gabbi\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}